# This is a basic workflow to help you get started with Actions

name: CPI-Demo

env:
  GITHUB_ACCESS_TOKEN: '${{ secrets.ACTION_GITHUB_ACCESS_TOKEN }}'
  GITHUB_API_URL_REST: 'https://github.deutsche-boerse.de/api/v3'
  OAUTH_URL: "https://oauthasservices-a1d40cbe0.hana.ondemand.com/oauth2/api/v1/token"
  IFLOW_URL: "https://y0057-tmn.hci.eu1.hana.ondemand.com:443/api/v1"
  SAP_OAUTH_AUTHORIZATION: ${{ secrets.SAP_OAUTH_AUTHORIZATION }}
  PACKAGE_ID: "TM053_Flow_TESTs"
  IFLOW_NAME: "My Iflow for testing_name_with space"
  
on:
  push:
    tags:
      - "v?[0-9]+.[0-9]+.[0-9]+"
    paths-ignore:
    - ".github/workflows/**"
  workflow_dispatch: 
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create zip file
      run: zip -r "{{ env.IFLOW_NAME }}.zip" . -x ".git/*" -x ".github/*"
    - name: extracting zip
      run: |
        echo "unzipping {{ env.IFLOW_NAME }}.zip"
        unzip "{{ env.IFLOW_NAME }}.zip" -o "{{ env.IFLOW_NAME }}.zip"
        echo "zip extracted as name {{ env.IFLOW_NAME }}.zip"
        ls -l
    
    - name: Convert ZIP to Base64
      run: base64 release-${{ github.run_number }}.zip > release-${{ github.run_number }}.zip.b64

    - name: Fetch Access Token
      run: |
        ACCESS_TOKEN=$(curl -s -X POST $OAUTH_URL  \
        --header "Authorization: Basic $SAP_OAUTH_AUTHORIZATION" \
        --header 'Accept: application/json' \
        --data "grant_type=client_credentials" | jq -r '.access_token')

        echo "ACCESS_TOKEN1=$ACCESS_TOKEN" >> $GITHUB_ENV
        #echo "::add-mask::$ACCESS_TOKEN"
        
        
    - name: Fetch X-CSRF-Token
      run: |
        CSRF_TOKEN=$(curl -s -X GET ${{ env.IFLOW_URL }}/IntegrationDesigntimeArtifacts \
        --header "Authorization: Bearer ${{ env.ACCESS_TOKEN1 }}" \
        --header 'Accept: application/json' \
        --header 'X-CSRF-Token: fetch' -I | grep -i "X-CSRF-Token" | awk '{print $2}')
        
        echo "CSRF_TOKEN1=$CSRF_TOKEN" >> $GITHUB_ENV
        #echo "::add-mask::$CSRF_TOKEN"
              

    - name: Create Upload Iflow
      run: |
        curl -X PUT ${{ env.IFLOW_URL }}/IntegrationDesigntimeArtifacts \
        --header 'Authorization: Bearer ${{ env.ACCESS_TOKEN1 }}' \
        --header 'X-CSRF-Token: $CSRF_TOKEN1' \
        --header 'Content-Type: application/json' \
        --data '{
          "Id": "${{ github.event.repository.name }}",
          "Name": "${{ github.event.repository.name }}",
          "PackageId": "${{ env.PACKAGE_ID }}",          
          "ArtifactContent": "release-${{ github.run_number }}.zip.b64"          
          }'

        


  
